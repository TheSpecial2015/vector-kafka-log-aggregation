services:
  node1:
    build:
      context: ./log-generator
    container_name: datanode1
    environment:
      - HOSTNAME=datanode1
      - IPADDR=10.0.0.1
    volumes:
      - ./logs/datanode1:/var/log/hadoop
    command: /bin/sh -c "/usr/sbin/sshd && ./loggen -file /var/log/hadoop/hadoop.log -node datanode1 -msgpersec 5 -payload-gen constant"
    ports:
      - "2201:22"
    depends_on:
      - kafka
    networks:
      - hawkeye-net

  node2:
    build:
      context: ./log-generator
    container_name: datanode2
    environment:
      - HOSTNAME=datanode2
      - IPADDR=10.0.0.2
    volumes:
      - ./logs/datanode2:/var/log/hadoop
    command: /bin/sh -c "/usr/sbin/sshd && ./loggen -file /var/log/hadoop/hadoop.log -node datanode1 -msgpersec 5 -payload-gen constant"
    ports:
      - "2202:22"
    depends_on:
      - kafka
    networks:
      - hawkeye-net

  node3:
    build:
      context: ./log-generator
    container_name: datanode3
    environment:
      - HOSTNAME=datanode3
      - IPADDR=10.0.0.3
    volumes:
      - ./logs/datanode3:/var/log/hadoop
    command: /bin/sh -c "/usr/sbin/sshd && ./loggen -file /var/log/hadoop/hadoop.log -node datanode1 -msgpersec 5 -payload-gen constant"
    ports:
      - "2203:22"
    depends_on:
      - kafka
    networks:
      - hawkeye-net

  node4:
    build:
      context: ./log-generator
    container_name: datanode4
    environment:
      - HOSTNAME=datanode4
      - IPADDR=10.0.0.4
    volumes:
      - ./logs/datanode4:/var/log/hadoop
    command: /bin/sh -c "/usr/sbin/sshd && ./loggen -file /var/log/hadoop/hadoop.log -node datanode1 -msgpersec 5 -payload-gen constant"
    ports:
      - "2204:22"
    depends_on:
      - kafka
    networks:
      - hawkeye-net

  node5:
    build:
      context: ./log-generator
    container_name: datanode5
    environment:
      - HOSTNAME=datanode5
      - IPADDR=10.0.0.5
    volumes:
      - ./logs/datanode5:/var/log/hadoop
    command: /bin/sh -c "/usr/sbin/sshd && ./loggen -file /var/log/hadoop/hadoop.log -node datanode1 -msgpersec 5 -payload-gen constant"
    ports:
      - "2205:22"
    depends_on:
      - kafka
    networks:
      - hawkeye-net

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hawkeye-net

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LINGER_MS=1
      - KAFKA_BUFFER_MEMORY=33554432
      - KAFKA_NUM_NETWORK_THREADS=3
      - KAFKA_NUM_IO_THREADS=8
    volumes:
      - ./kafka/setup-kafka.sh:/setup-kafka.sh
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--describe",
          "--topic",
          "logs",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - hawkeye-net

  go-consumer:
    build:
      context: ./log-consumer
      dockerfile: Dockerfile
    container_name: go-consumer
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=admin
    networks:
      - hawkeye-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass "admin"
    networks:
      - hawkeye-net

  sveltekit-app:
    build:
      context: ./svelte-dashboard
      dockerfile: Dockerfile
    container_name: sveltekit_app
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=admin
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:3000/api
    networks:
      - hawkeye-net

networks:
  hawkeye-net:
    driver: bridge
